people_reached = as.numeric(unique(district_logs[[i]]$Interviewee))
district_name=(district_logs[[i]]$Interviewer..District.Name)
print(district_name)
print(people_reached[i])
}
for(i in 1:length(district_logs)){
people_reached = as.numeric(unique(district_logs[[i]]$Interviewee))
district_name=(district_logs[[i]]$Interviewer..District.Name)
print(district_name[i])
print(people_reached[i])
}
for(i in 1:length(district_logs)){
people_reached = as.numeric(unique(district_logs[[i]]$Interviewee))
district_name=(district_logs[[i]]$Interviewer..District.Name)
#print(district_name[i])
print(people_reached[i])
}
latlon <- read.table("~/Documents/DataWithoutBorders/FinalProject/latlon.txt", sep=";", quote="\"")
View(latlon)
merged= merge(search_logs, latlon, by="col1", all= TRUE)
colnames(latlon)[1]="Interviewer..District.Name"
head(latlon)
merged= merge(search_logs, latlon, by="Interviewer..District.Name", all= TRUE)
head(merged)
tail(merged)
merged= merge(search_logs, latlon, by="Interviewer..District.Name")
head(merged)
colnames(merged)[12]="Interviewer Latitude"
colnames(merged)[13]="Interviewer Longitude"
head(merged)
library(maps)
library(geosphere)
install.packages("geosphere", lib="/Applications/RStudio.app/Contents/Resources/R/library")
library(geosphere)
map("Uganda")
library(gpclib)
library(maptools)
library(RColorBrewer)
library(classInt)
#To enable the polygon-clipping library, type:
gpclibPermit()
#Read the shapefiles using the maptools function read.shape()
# outlines of Oregon counties (lines)
# browse to orotl.shp
orotl.shp <- readShapeLines('Downloads/orotl.shp',proj4string=CRS("+proj=longlat"))
# Oregon climate station data (points)
# browse to orstations.shp
orstations.shp <- readShapePoints('Downloads/orstations.shp',proj4string=CRS("+proj=longlat"))
# Oregon county census data (polygons)
# browse to orcounty.shp
orcounty.shp <- readShapePoly('Downloads/orcounty.shp',proj4string=CRS("+proj=longlat"))
#Read ordinary rectangular data sets:
orstationc <- read.csv("Downloads/orstationc.csv")
orcountyp <- read.csv("Downloads/orcountyp.csv")
cities <- read.csv("Downloads/cities2.csv")
#Examine the structure and contents of orcounty.shp shapefile:
summary(orcounty.shp)
attributes(orcounty.shp)
attributes(orcounty.shp@data)
attr(orcounty.shp,"polygons")
#1.  Some simple maps
#R has the capability of plotting some simple maps using the maptools package, which can read and plot ESRI shapefiles.  Here are a couple of examples:
#Oregon county census data -- attribute data in the orcounty.shp shape file
# equal-frequency class intervals
plotvar <- orcounty.shp@data$POP1990
nclr <- 8
plotclr <- brewer.pal(nclr,"BuPu")
class <- classIntervals(plotvar, nclr, style="quantile")
colcode <- findColours(class, plotclr)
plot(orcounty.shp, xlim=c(-124.5, -115), ylim=c(42,47))
plot(orcounty.shp, col=colcode, add=T)
title(main="Population 1990",
sub="Quantile (Equal-Frequency) Class Intervals")
legend(-117, 44, legend=names(attr(colcode, "table")),
fill=attr(colcode, "palette"), cex=0.6, bty="n")
Oregon climate station data -- data in the orstationc.csv file, basemap in orotl.shp
# symbol plot -- equal-interval class intervals
plotvar <- orstationc$tann
nclr <- 8
plotclr <- brewer.pal(nclr,"PuOr")
plotclr <- plotclr[nclr:1] # reorder colors
class <- classIntervals(plotvar, nclr, style="equal")
colcode <- findColours(class, plotclr)
plot(orotl.shp, xlim=c(-124.5, -115), ylim=c(42,47))
points(orstationc$lon, orstationc$lat, pch=16, col=colcode, cex=2)
points(orstationc$lon, orstationc$lat, cex=2)
title("Oregon Climate Station Data -- Annual Temperature",
sub="Equal-Interval Class Intervals")
legend(-117, 44, legend=names(attr(colcode, "table")),
fill=attr(colcode, "palette"), cex=0.6, bty="n")
Oregon climate station data -- locations and data in shape file
# symbol plot -- equal-interval class intervals
plotvar <- orstations.shp@data$pann
nclr <- 5
plotclr <- brewer.pal(nclr,"BuPu")
class <- classIntervals(plotvar, nclr, style="fixed",
fixedBreaks=c(0,200,500,1000,2000,5000))
colcode <- findColours(class, plotclr)
orstations.pts <- orstations.shp@coords # get point data
plot(orotl.shp, xlim=c(-124.5, -115), ylim=c(42,47))
points(orstations.pts, pch=16, col=colcode, cex=2)
points(orstations.pts, cex=2)
title("Oregon Climate Station Data -- Annual Precipitation",
sub="Fixed-Interval Class Intervals")
legend(-117, 44, legend=names(attr(colcode, "table")),
fill=attr(colcode, "palette"), cex=0.6, bty="n")
library(gpclib)
library(maptools)
library(RColorBrewer)
library(classInt)
uganda= readShapePoly('Documents/DataWithoutBorders/FinalProject/UGA_adm/UGA_adm0.shp')
uganda
uganda= readShapePoly('Documents/DataWithoutBorders/FinalProject/UGA_adm/UGA_adm0.shp')
View(Uganda)
plor(uganda)
plot(uganda)
map(plor(uganda), col="#f2f2f2", fill=TRUE, bg="white")
map(plot(uganda), col="#f2f2f2", fill=TRUE, bg="white")
plot(uganda, col="#f2f2f2",fill=TRUE, bg="white")
plot(uganda, col="#f2f2f2",fill=TRUE, bg="white", main="UGANDA")
plot(uganda, col="#f2f2f2",bg="white", main="UGANDA")
plot(uganda, col="#f2f2f2",bg="white", title="UGANDA")
inter=gcIntermediate(c(3.9519409,32.36023), c(2.7793199,32.328483), n=50, addStartEnd=TRUE)
lines(inter)
?lines
lines(c(3.9519409,32.36023), c(2.7793199,32.328483))
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("Uganda"))
points(latlon$V2, latlon$V3, pch=16,cex=1.5)
points(latlon$V2, latlon$V3, pch=16,cex=1.5)
points(latlon$V2, latlon$V3, pch=16,cex=8)
?cex
??cex
?points
points(latlon$V2, latlon$V3, pch=16,cex=8, col='red')
points(latlon$V2, latlon$V3, pch=16,cex=8, col="red")
points(latlon$V2, latlon$V3, pch=16,cex=1.5, col="red")
uganda= readShapePoly('Documents/DataWithoutBorders/FinalProject/UGA_adm/UGA_adm1.shp')
uganda= readShapePoly('Documents/DataWithoutBorders/FinalProject/UGA_adm/UGA_adm1.shp')
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("Uganda"))
points(latlon$V2, latlon$V3, pch=16,cex=1.5, col="red")
locator()
?locator
points (30.63450, -1.0639800, pch=16, cex=1.5)
points (30.63450, -1.0639800, pch=16, cex=.5)
points (30.63450, -1.0639800, pch=10, cex=.5)
head(latlon$V2)
points(3.9519409, 32.36023, pch=10, cex=.5)
points( 32.36023,3.9519409 pch=10, cex=.5)
points( 32.36023,3.9519409 ,pch=10, cex=.5)
latlon = latlon[c("V1", "V3","V2")]
colnames(latlon)[1]="District"
colnames(latlon)[2]= "Latitude"
colnames(latlon)[3]="Longitude"
head(latlon)
latlon= latlon[c("District","Longitude", "Latitude")]
head(latlon)
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)title(paste("Uganda"))
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)title(paste("Uganda"))
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5)
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, color="red")
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
max(latlon$Latitude)
which(max(latlon$Latitude))
which.max(latlon$Latitude)
latlon$District[1]= 3.6
head(latlon)
latlon$District[1]="Kitgum"
latlon$District[1,1]="Kitgum"
head(latlon)
latlon$District[1,]= "Kitgum"
latlon$District[1,]= as.character("Kitgum")
latlon[1,1]
latlon$District[1,1]
latlon$District[,1]
latlon$District[1]
latlon$District[2]
latlon$District[1]="Kitgum"
latlon$District[1]=as.character("Kitgum")
latlon[1,"District"]= "Kitgum"
latlon[1,"District"]= Kitgum
latlon[1,"District"]= "as.character("Kitgum")
latlon[1,"District"]= as.character("Kitgum")
latlon[1,"District"]= as.factor("Kitgum")
latlon1 = data.frame(latlon, stringsAsFactors=False)
head(latlon1)
latlon1[1, "District"]= "Kitgum"
latlon1[1, "District"]= as.factor("Kitgum")
levels(latlon1$District)=c(levels(latlon$District), 'Kitgum')
latlon1[1, "District"]= Kitgum
latlon1[1, "District"]= "Kitgum"
head(latlon1)
lalon=latlon1
latlon=latlon1
head(latlon)
latlon[1,"Longitude"]
latlon[1, "Latitude"]
latlon[1, "Latitude"]= 3.6
latlon[1, "Latitude"]
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
text(latlon$Longitude,latlon$Latitude,latlon$District,cex=1,adj=0, pos=2, col="red")
text(latlon$Longitude,latlon$Latitude,latlon$District,cex=1,adj=1, pos=1, col="red")
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
text(latlon$Longitude,latlon$Latitude,latlon$District,cex=1,adj=1, pos=1, col="red")
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
text(latlon$Longitude,latlon$Latitude,latlon$District,cex=.5,adj=2, pos=1, col="red")
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
text(latlon$Longitude,latlon$Latitude,latlon$District,cex=.8,adj=0, pos=1, col="red")
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
text(latlon$Longitude,latlon$Latitude,latlon$District,cex=.8,adj=0, pos=sample(0:4,1), col="red")
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
text(latlon$Longitude,latlon$Latitude,latlon$District,cex=.8,adj=0, pos=sample(0:4,1), col="red")
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
text(latlon$Longitude,latlon$Latitude,latlon$District,cex=.8,adj=0, pos=sample(0:4,1), col="black")
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
text(latlon$Longitude,latlon$Latitude,latlon$District,cex=.8,adj=0, pos=sample(0:4,1), col="red")
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
text(latlon$Longitude,latlon$Latitude,latlon$District,cex=.8,adj=0, pos=sample(0:4,1), col="red")
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
text(latlon$Longitude,latlon$Latitude,latlon$District,cex=.8,adj=0, pos=sample(0:4,1), col="red")
uganda= readShapePoly('Documents/DataWithoutBorders/FinalProject/UGA_adm/UGA_adm0.shp')
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
text(latlon$Longitude,latlon$Latitude,latlon$District,cex=.8,adj=0, pos=sample(0:4,1), col="red")
uganda= readShapePoly('Documents/DataWithoutBorders/FinalProject/UGA_adm/UGA_adm2.shp')
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
text(latlon$Longitude,latlon$Latitude,latlon$District,cex=.8,adj=0, pos=sample(0:4,1), col="red")
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
text(latlon$Longitude,latlon$Latitude,latlon$District,cex=.8,adj=0, pos=sample(0:4,1), col="red")
install.packages("RCurl", lib="/Applications/RStudio.app/Contents/Resources/R/library")
install.packages("RJSONIO", lib="/Applications/RStudio.app/Contents/Resources/R/library")
install.packages("cartodb_0.1.tar.gz", repos=NULL, type="source")
install_github("cartodb-r", "Vizzuality")
install.packages("cartodb_0.1.tar.gz", repos=NULL, type="source")
install.packages("cartodb_0.1.tar.gz", repos=NULL, type="source")
?directory
?library
install.packages("~/Downloads/CartoDB_1.4.tar.gz", repos = NULL)
install.packages("~/Downloads/CartoDB_1.4.tar.gz", repos = NULL, type="source")
cartodb("anan")
library(cartodb)
library(CartoDb)
library(CartoDB)
cartodb("anan")
cartodb.test()
img=readPNG(cartodb.tiles.tile("california_zips", 41, 100,8))
library(RCulr)
library(RCurl)
img=readPNG(cartodb.tiles.tile("california_zips", 41, 100,8))
library(RCurl)
library(RJSONIO)
library(CartoDB)
img=readPNG(cartodb.tiles.tile("california_zips", 41, 100,8))
library(rgdal)
library(maptools)
library(RCurl)
library(RJSONIO)
library(CartoDB)
library(RColorBrewer)
library(classInt)
# Setup our CartoDB Connection
cartodb_account_name = "viz2";
cartodb(cartodb_account_name)
crs <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
# Get frisk density
boroughsUrl <- cartodb.collection(sql = "SELECT the_geom,num_stops,boroname,borocode,shape_area FROM nyct2000 WHERE the_geom IS NOT NULL AND boroname != 'Staten Island' AND 0<num_stops", method="GeoJSON", urlOnly=TRUE)
frisk.density<-readOGR(boroughsUrl,p4s=crs,layer = 'OGRGeoJSON')
library(rgdal)
library(maptools)
library(RCurl)
library(RJSONIO)
library(CartoDB)
library(RColorBrewer)
library(classInt)
# Setup our CartoDB Connection
cartodb_account_name = "anan";
cartodb(cartodb_account_name)
crs <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
# Get frisk density
boroughsUrl <- cartodb.collection(sql = "SELECT the_geom,num_stops,boroname,borocode,shape_area FROM nyct2000 WHERE the_geom IS NOT NULL AND boroname != 'Staten Island' AND 0<num_stops", method="GeoJSON", urlOnly=TRUE)
frisk.density<-readOGR(boroughsUrl,p4s=crs,layer = 'OGRGeoJSON')
plotvar <- as.numeric(frisk.density$num_stops)/as.numeric(frisk.density$shape_area)
# plotvar <- log(plotvar+1)
nclr <- 6
plotclr <- brewer.pal(nclr,"YlOrRd")
# plotclr <- plotclr[nclr:1] #reordering colors looks better
class <- classIntervals(plotvar, nclr, style="quantile")
colcode <- findColours(class, plotclr, digits=4)
frisk.hours <- cartodb.collection(sql = "SELECT count(*) as ct,city,city_code,floor(timestop/100) hr FROM stop_frisk Where frisked = 'Y' and city != 'STATEN IS' GROUP BY city,city_code,hr")
nclr <- 4
plotclr <- brewer.pal(nclr,"Set1")
class <- classIntervals(as.numeric(frisk.hours$city_code), nclr, style="quantile")
colcode2 <- findColours(class, plotclr, digits=4)
op <- par(mfrow=c(1,2))
plot(frisk.hours$hr, frisk.hours$ct, col=colcode2, pch=15,
xlab=NA, ylab="Frisks")
a<- legend(7,8000, legend=c("","","",""), fill=attr(colcode2, "palette"), bty="n",x.intersp = .5, y.intersp = .7)
text(a$text$x-1,a$text$y,c("Queens","Manhattan","Bronx","Brooklyn"),pos=2)
plot(frisk.density, col=colcode, border=NA,bg="#ced4db",axes=TRUE,ylab="",yaxt="n")
par(op)
title(main="NYC Frisks by Hour of Day and Neighborhood")
data=cartodb.spatial.dm(laton)
data=cartodb.spatial.dm("laton")
data=cartodb.collection("latlon", geomAs="XY", omitNull=TRUE)
map(regions="uganda", lwd=0.05,lty=1)
library(rgdal)
library(maptools)
library(RCurl)
library(RJSONIO)
library(CartoDB)
# Setup our CartoDB Connection
cartodb_account_name = "viz2";
cartodb(cartodb_account_name)
# CartoDB the_geom columns are always the following proj string
crs <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
# Get OSM polygons for Riyadh
polyUrl <- cartodb.collection("riyadh_osm_polygon", columns=c("cartodb_id","the_geom"), omitNull=TRUE,method="GeoJSON", urlOnly=TRUE)
riyadh.poly<-readOGR(polyUrl,p4s=crs,layer = 'OGRGeoJSON')
library(rgdal)
library(maptools)
library(RCurl)
library(RJSONIO)
library(CartoDB)
# Setup our CartoDB Connection
cartodb_account_name = "anan";
cartodb(cartodb_account_name)
# CartoDB the_geom columns are always the following proj string
crs <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
# Get OSM polygons for Riyadh
polyUrl <- cartodb.collection("riyadh_osm_polygon", columns=c("cartodb_id","the_geom"), omitNull=TRUE,method="GeoJSON", urlOnly=TRUE)
riyadh.poly<-readOGR(polyUrl,p4s=crs,layer = 'OGRGeoJSON')
# Get OSM roads for Riyadh
roadUrl <- cartodb.collection("riyadh_osm_roads", columns=c("cartodb_id","the_geom"), omitNull=TRUE,method="GeoJSON", urlOnly=TRUE)
riyadh.roads<-readOGR(roadUrl,p4s=crs,layer = 'OGRGeoJSON')
# Get OSM railways for Riyadh
railUrl <- cartodb.collection(sql="SELECT cartodb_id, the_geom FROM riyadh_osm_line WHERE railway IS NOT NULL",method="GeoJSON",urlOnly=TRUE)
riyadh.rails<-readOGR(railUrl,p4s=crs,layer = 'OGRGeoJSON')
# Plot the polygons and roads on a small map
plot(riyadh.poly,axes=TRUE, border="gray",col="#A2CD5A",bg="white")
lines(riyadh.roads, col="#3a3a3a", lwd=1)
lines(riyadh.rails, col="burlywood3", lwd=3)
library(ggplot)
install.packages("ggplot2", lib="/Applications/RStudio.app/Contents/Resources/R/library")
library(ggplot)
library(ggplot2)
?mpg
p=ggplot(mpg, aes(displ, hwy))
p
p + geom_point()
summary(mpg)
library(ggplot2)
head(latlon)
map=qplot(latlon$Longitude, latlon$Latitude)
?qplot
map=qplot(latlon$Longitude, latlon$Latitude, latlon)
map
install.packages("pnh", lib="/Applications/RStudio.app/Contents/Resources/R/library")
install.packages("png", lib="/Applications/RStudio.app/Contents/Resources/R/library")
install.packages("GridR", lib="/Applications/RStudio.app/Contents/Resources/R/library")
?annotation_custom
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
library(png)
library(GridR)
img= readPNG(system.file("img", "Uganda_plain.png", package="PNG"))
setwd
function(dir)
?setwd
setwd(/Documents/DataWithoutBorders/FinalProject)
setwd(Documents/DataWithoutBorders/FinalProject)
setwd(Users/ananyamukherjee/Documents/DataWithoutBorders/FinalProject)
getwd
getwd()
setwd(/Users/ananyamukherjee/Documents/DataWithoutBorders/FinalProject)
setwd(Users/ananyamukherjee/Documents/DataWithoutBorders/FinalProject)
setwd(\Users/ananyamukherjee/Documents/DataWithoutBorders/FinalProject)
setwd("Users/ananyamukherjee/Documents/DataWithoutBorders/FinalProject")
img= readPNG(system.file("img", "Uganda_plain.png", package="PNG"))
?readPNG
img=readPNG("Uganda_plain.png", native=FALSE)
img= readPNG(system.file("img", "Uganda_plain.png", package="png"), TRUE)
?GridR
install.packages("gridSVG", lib="/Applications/RStudio.app/Contents/Resources/R/library")
img= readPNG(system.file("img", "Uganda_plain.png", package="png"), TRUE)
?gridSVG
??gridSVG
install.packages("gridExtra", lib="/Applications/RStudio.app/Contents/Resources/R/library")
img= readPNG(system.file("img", "Uganda_plain.png", package="png"), TRUE)
img= readPNG(system.file("img", "Uganda_plain.png", package="png"))
img=readPNG("Uganda_plain.png", native=FALSE)
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
inter=gcIntermediate(c(latlon[1,1]), c(latlon[2,2]), n=50, addStartEnd=TRUE)
inter=gcIntermediate(c(latlon[1,1], latlon[1,2]), c(latlon[2,1], latlon[2,2]), n=50, addStartEnd=TRUE)
lines(inter, col="red")
?gcIntermediate
inter=gcIntermediate(c(latlon[1,1], latlon[1,2]), c(latlon[2,1], latlon[2,2]), n=15, addStartEnd=TRUE)
lines(inter, col="red")
inter= gcIntermediate(c(32.36023,3.9519409), c(32.28483, 2.7793199), n=50,addStartEnd=TRUE)
lines(inter, col="red")
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
head(search_logs)
head(merged)
?inter
??inter
?gcIntermediate
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
#text(latlon$Longitude,latlon$Latitude,latlon$District,cex=.8,adj=0, pos=sample(0:4,1), col="red")
for(i in 1:length(latlon)){
inter=gcIntermediate(c(search_logs$InterviewerLongitude, search_logs$InterviewLatitude), c(search_logs$Submission.Longitude, search_logs$Submission.Latitude), n=50,addStartEnd=False)
lines(inter,col="red")
}
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
#text(latlon$Longitude,latlon$Latitude,latlon$District,cex=.8,adj=0, pos=sample(0:4,1), col="red")
for(i in 1:length(latlon)){
inter=gcIntermediate(c(search_logs$Interviewer Longitude, search_logs$Interview Latitude), c(search_logs$Submission.Longitude, search_logs$Submission.Latitude), n=50,addStartEnd=False)
lines(inter,col="red")
}
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
#text(latlon$Longitude,latlon$Latitude,latlon$District,cex=.8,adj=0, pos=sample(0:4,1), col="red")
for(i in 1:length(latlon)){
inter=gcIntermediate(c(search_logs$Interviewer Longitude, search_logs$Interview Latitude),
c(search_logs$Submission.Longitude, search_logs$Submission.Latitude), n=50,addStartEnd=False)
lines(inter,col="red")
}
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
#text(latlon$Longitude,latlon$Latitude,latlon$District,cex=.8,adj=0, pos=sample(0:4,1), col="red")
for(i in 1:length(latlon)){
inter=gcIntermediate(c(search_logs$Interviewer Longitude, search_logs$Interview Latitude),
c(search_logs$Submission.Longitude, search_logs$Submission.Latitude), n=50,addStartEnd=False)
lines(inter,col="red")
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
#text(latlon$Longitude,latlon$Latitude,latlon$District,cex=.8,adj=0, pos=sample(0:4,1), col="red")
for(i in 1:length(latlon)){
inter=gcIntermediate(c(search_logs$Interviewer Longitude, search_logs$Interview Latitude),
c(search_logs$Submission.Longitude, search_logs$Submission.Latitude), n=50,addStartEnd=False)
lines(inter,col="red")
}
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
#text(latlon$Longitude,latlon$Latitude,latlon$District,cex=.8,adj=0, pos=sample(0:4,1), col="red")
for(i in 1:length(latlon)){
inter=gcIntermediate(c(search_logs$Interviewer Longitude, search_logs$Interview Latitude),
c(search_logs$Submission.Longitude, search_logs$Submission.Latitude), n=50,addStartEnd=False)
lines(inter, col="red")
}
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
#text(latlon$Longitude,latlon$Latitude,latlon$District,cex=.8,adj=0, pos=sample(0:4,1), col="red")
for(i in 1:length(latlon)){
inter=gcIntermediate(c(search_logs$Interviewer Longitude, search_logs$Interview Latitude),
c(search_logs$Submission.Longitude, search_logs$Submission.Latitude), n=50,addStartEnd=False)
lines(inter)
}
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
#text(latlon$Longitude,latlon$Latitude,latlon$District,cex=.8,adj=0, pos=sample(0:4,1), col="red")
for(i in 1:length(latlon)){
inter=gcIntermediate(c(search_logs$Interviewer Longitude, search_logs$Interview Latitude),
c(search_logs$Submission.Longitude, search_logs$Submission.Latitude), n=50,addStartEnd=False)
lines(inter)}
plot(uganda, col="#f2f2f2",bg="white",lwd=0.01)
title(paste("CKW Districts in Uganda"))
points(latlon$Longitude, latlon$Latitude, pch=16, cex=.5, col="red")
#text(latlon$Longitude,latlon$Latitude,latlon$District,cex=.8,adj=0, pos=sample(0:4,1), col="red")
for(i in 1:length(search_logs)){
inter=gcIntermediate(c(search_logs$Interviewer Longitude, search_logs$Interview Latitude),c(search_logs$Submission.Longitude, search_logs$Submission.Latitude), n=50,addStartEnd=False)
lines(inter, col="red", lwd=0.5)
}
